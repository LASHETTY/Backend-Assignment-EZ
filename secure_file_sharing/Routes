from flask import request, jsonify
from flask_jwt_extended import create_access_token
from flask_mail import Mail, Message
import secrets

mail = Mail(app)
app.config.update(
    MAIL_SERVER='smtp.gmail.com',
    MAIL_PORT=587,
    MAIL_USE_TLS=True,
    MAIL_USERNAME='your_email@gmail.com',
    MAIL_PASSWORD='your_email_password'
)

@app.route('/signup', methods=['POST'])
def signup():
    data = request.json
    hashed_pw = bcrypt.generate_password_hash(data['password']).decode('utf-8')
    user = User(username=data['username'], email=data['email'], password=hashed_pw, role='client')
    db.session.add(user)
    db.session.commit()

    secure_url = secrets.token_urlsafe(32)
    verification_url = f"http://yourdomain.com/verify/{secure_url}"
    msg = Message('Verify Your Email', recipients=[data['email']])
    msg.body = f"Click the link to verify your email: {verification_url}"
    mail.send(msg)

    return jsonify({"message": "User registered. Verification email sent.", "verification_url": verification_url})

@app.route('/login', methods=['POST'])
def login():
    data = request.json
    user = User.query.filter_by(username=data['username']).first()
    if user and bcrypt.check_password_hash(user.password, data['password']):
        token = create_access_token(identity={'id': user.id, 'role': user.role})
        return jsonify({"token": token})
    return jsonify({"message": "Invalid credentials"}), 401
